# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g6JeNwrSosL3hfsZOUjqFe6D8EL9WUSK
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.metrics import classification_report, confusion_matrix
from sklearn. ensemble import RandomForestClassifier

import os

df = pd.read_csv("/content/Health_Risk_Dataset.csv")

df

df.info

df.head(5)

df.tail(5)

df.describe()

le =  LabelEncoder()
df["Consciousness"] = le.fit_transform(df["Consciousness"])
df["Risk_Level"] = le.fit_transform(df["Risk_Level"])
df["On_Oxygen"] = le.fit_transform(df["On_Oxygen"])
df["O2_Scale"] = le.fit_transform(df["O2_Scale"])
df

features = ["Respiratory_Rate", "Oxygen_Saturation", "O2_Scale", "Systolic_BP", "Heart_Rate", "Temperature", "Consciousness", "On_Oxygen"]
x = df[features]
y = df["Risk_Level"]

scaler = StandardScaler()
x_scaled = scaler.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size= 0.20, random_state=42)
model = LogisticRegression(max_iter = 1000)
model.fit(x_train, y_train)

print(confusion_matrix(y_test, model.predict(x_test) ))

x.corr()

model = RandomForestClassifier(n_estimators=100)
model.fit(x_train, y_train)

print(x_train)
print(y_train)

print(classification_report(y_test,model.predict(x_test)))


print(x_test)
print(y_test)

print(confusion_matrix(y_test, model. predict(x_test)))

print(x_test)
print(y_test)